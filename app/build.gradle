plugins {
    id 'com.android.application'
    id "com.google.protobuf" version "0.9.1"
}

android {
    namespace 'com.example.computershopmobile'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.computershopmobile"
        minSdk 16
        targetSdk 33
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    buildToolsVersion '30.0.3'
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    //noinspection GradleDynamicVersion
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'androidx.navigation:navigation-fragment:2.5.2'
    implementation 'androidx.navigation:navigation-ui:2.5.2'
    implementation 'com.android.billingclient:billing:6.0.1'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
    //implementation 'io.grpc:protoc-gen-grpc-java:1.55.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}



/*protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.23.1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.55.1'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {}
            }
            task.plugins {
                grpc {}
            }
        }
    }
}
        /*all().each {
            task ->
                def grpcOut = "app/src/main/java"
                def grpcPlugin = new org.grpc.generator.GrpcGeneratorPlugin()
                grpcPlugin.generatedFilesBaseDir = grpcOut
                task.plugins {
                    grpc {
                        outputSubDir = "java"
                        grpcPlugin.performGeneration(it, grpcOut)
                    }
                }
            }
        }
    }*/